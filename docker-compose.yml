networks:
  traefik_public:
    name: traefik_public
    driver: bridge

services:
  traefik:
    image: "traefik:v3.5"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--providers.docker.network=traefik_public"
    ports:
      - "80:80" # Public HTTP
      - "8080:8080" # Traefik Dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - traefik_public

  # Master backend: Headless WP
  master-backend:
    build:
      context: ./services/backend-master
      dockerfile: Dockerfile
    image: "master-backend:${IMAGE_TAG:-latest}" # This should be changed later on fit ${GITHUB_SHA::7} >> .env
    container_name: master-backend
    restart: unless-stopped
    networks:
      - traefik_public
    volumes:
      - master-wp-content:/var/www/html/wp-content
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/80;echo -e 'GET /wp-json/system/v1/health HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n' >&3; grep 'HTTP/1.1 200 OK' <&3"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    secrets:
      - wp_cli_user
      - wp_cli_pass
      - wp_cli_email
      - wp_db_pass
      - mysql_root_pass
    environment:
      WORDPRESS_DB_HOST: ${MYSQLHOST}
      WORDPRESS_DB_PORT: ${MYSQLPORT}
      WORDPRESS_DB_USER: ${MYSQLUSER}
      WORDPRESS_DB_PASSWORD: ${MYSQLPASSWORD}
      WORDPRESS_DB_NAME: ${MYSQLDATABASE}
      WP_PUBLIC_URL: http://api.localhost
      WP_URL: http://master-backend
      WP_TITLE: "Master Headless Wordpress"
      WP_ADMIN_USER_FILE: /run/secrets/wp_cli_user
      WP_ADMIN_EMAIL_FILE: /run/secrets/wp_cli_email
      WP_ADMIN_PASS_FILE: /run/secrets/wp_cli_pass
      WP_DEPLOYER_EMAIL: ${WP_DEPLOYER_EMAIL}
      WP_DEPLOYER_PASS: ${WP_DEPLOYER_PASS}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localhost`)" # the address for the API
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=80"
      - "traefik.docker.network=docker-practice_traefik_public"

  # Master frontend: Astro SSR
  master-frontend:
    build:
      context: ./services/frontend-master
    image: master-frontend:${IMAGE_TAG:-latest}
    container_name: master-frontend
    restart: unless-stopped
    networks:
      - traefik_public
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4321 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    environment:
      WP_API_INTERNAL: http://master-backend:80/wp-json/wp/v2
      PUBLIC_WP_API: http://api.localhost/wp-json/wp/v2
    depends_on:
      traefik:
        condition: service_started
      master-backend:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`www.localhost`)" # the address for the site
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=4321" # the internal astro port
      - "traefik.docker.network=docker-practice_traefik_public"

volumes:
  master-wp-content:

# leave this here for production build only
secrets:
  wp_cli_user:
    file: ./secrets/wp_cli_user
  wp_cli_pass:
    file: ./secrets/wp_cli_pass
  wp_cli_email:
    file: ./secrets/wp_cli_email
  wp_db_pass:
    file: ./secrets/wp_db_pass
  mysql_root_pass:
    file: ./secrets/mysql_root_pass