networks:
  backend-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.10.0.0/16
          gateway: 10.10.0.1
  frontend-net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.20.0.0/16
          gateway: 10.20.0.1

x-backend-env: &backend-env
  WORDPRESS_DB_PASSWORD_FILE: /run/secrets/wp_db_pass
  WORDPRESS_DB_USER: wp_user

x-frontend-env: &frontend-env {}

x-backend-template: &backend-defaults
  build:
    dockerfile: Dockerfile
  image: sat-backend:latest
  networks: [backend-net]
  volumes:
    - wp-content:/var/www/html/wp-content
  secrets:
    - mysql_root_pass
    - wp_db_pass
  healthcheck:
    test: ["CMD-SHELL","curl -f http://localhost:80/wp-json || exit 1"]
    interval: 30s
    timeout: 5s
    retries: 3
    start_period: 15s
  restart: unless-stopped

x-frontend-template: &frontend-defaults
  build:
    dockerfile: Dockerfile
  image: sat-frontend:latest
  networks: [frontend-net, backend-net]
  ports: ["4321:4321"]
  healthcheck:
    test: ["CMD-SHELL","curl -f http://localhost:4321/health || exit 1"]
    interval: 30s
    timeout: 5s
    retries: 3
    start_period: 15s
  restart: unless-stopped
  environment:
    API_URL: http://satellite-backend:80

services:
  # Master backend: Headless WP
  master-backend:
    build:
      context: ./services/backend-master
      dockerfile: Dockerfile
    image: "master-backend:${IMAGE_TAG}" # This should be changed later on fit ${GITHUB_SHA::7} >> .env
    networks:
      - backend-net
    volumes:
      - master-wp-content:/var/www/html/wp-content
    healthcheck:
      test: ["CMD-SHELL","curl -f http://localhost:80/wp-json || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    restart: unless-stopped
    secrets:
      - wp_db_pass
    environment:
      WORDPRESS_DB_HOST: db-master
      WORDPRESS_DB_USER: wp_user
      WORDPRESS_DB_PASSWORD_FILE: /run/secrets/wp_db_pass
      WORDPRESS_DB_NAME: wp_master
    depends_on:
      - db-master
    ports:
      - "9001:80"
  
  # Master frontend: Astro SSR
  master-frontend:
    build:
      context: ./services/frontend-master
      dockerfile: Dockerfile
    image: master-frontend:latest
    networks:
      - frontend-net
      - backend-net
    healthcheck:
      test: ["CMD-SHELL","curl -f http://localhost:4321/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    restart: unless-stopped
    secrets:
      - mysql_root_pass
    environment:
      API_URL: http://master-backend:80
    ports:
      - "4321:4321"
    depends_on:
      - master-backend

  # Satellite 1
  satellite-backend-1:
    <<: *backend-defaults
    build:
      context: ./services/sat1-backend
    image: sat1-backend:v1.0
    volumes:
      - sat1-wp-content:/var/www/html/wp-content
    environment:
      <<: *backend-env
      WORDPRESS_DB_HOST: db-sat1
      WORDPRESS_DB_NAME: wp_sat1
    depends_on:
      - db-sat1
    ports:
      - "9011:80"

  satellite-frontend-1:
    <<: *frontend-defaults
    build:
      context: ./services/sat1-frontend
    image: sat1-frontend:v1.0
    environment:
      <<: *frontend-env
      API_URL: http://satellite-backend-1:80
    ports:
      - "4331:4321"
  
  # Satellite 2
  satellite-backend-2:
    <<: *backend-defaults
    build:
      context: ./services/sat2-backend
    image: sat2-backend:v1.0
    volumes:
      - sat2-wp-content:/var/www/html/wp-content
    environment:
      <<: *backend-env
      WORDPRESS_DB_HOST: db-sat2
      WORDPRESS_DB_NAME: wp_sat2
    depends_on:
      - db-sat2
    ports:
      - "9012:80"

  satellite-frontend-2:
    <<: *frontend-defaults
    build:
      context: ./services/sat2-frontend
    image: sat2-frontend:v1.0
    environment:
      <<: *frontend-env
      API_URL: http://satellite-backend-2:80
    ports:
      - "4341:4321"

  # Satellite 3
  satellite-backend-3:
    <<: *backend-defaults
    build:
      context: ./services/sat3-backend
    image: sat3-backend:v1.0
    volumes:
      - sat3-wp-content:/var/www/html/wp-content
    environment:
      <<: *backend-env
      WORDPRESS_DB_HOST: db-sat3
      WORDPRESS_DB_NAME: wp_sat3
    depends_on:
      - db-sat3
    ports:
      - "9013:80"

  satellite-frontend-3:
    <<: *frontend-defaults 
    build:
      context: ./services/sat3-frontend
    image: sat3-frontend:v1.0
    environment:
      <<: *frontend-env
      API_URL: http://satellite-backend-3:80
    ports:
      - "4351:4321"

  # Satellite 4
  satellite-backend-4:
    <<: *backend-defaults
    build:
      context: ./services/sat4-backend
    image: sat4-backend:v1.0
    volumes:
      - sat4-wp-content:/var/www/html/wp-content
    environment:
      <<: *backend-env
      WORDPRESS_DB_HOST: db-sat4
      WORDPRESS_DB_NAME: wp_sat4
    depends_on:
      - db-sat4
    ports:
      - "9014:80"

  satellite-frontend-4:
    <<: *frontend-defaults
    build:
      context: ./services/sat4-frontend
    image: sat4-frontend:v1.0
    environment:
      <<: *frontend-env
      API_URL: http://satellite-backend-4:80
    ports:
      - "4361:4321"

  # Satellite 5
  satellite-backend-5:
    <<: *backend-defaults
    build:
      context: ./services/sat5-backend
    image: sat5-backend:v1.0
    volumes:
      - sat5-wp-content:/var/www/html/wp-content
    environment:
      <<: *backend-env
      WORDPRESS_DB_HOST: db-sat5
      WORDPRESS_DB_NAME: wp_sat5
    depends_on:
      - db-sat5
    ports:
      - "9015:80"

  satellite-frontend-5:
    <<: *frontend-defaults
    build:
      context: ./services/sat5-frontend
    image: sat5-frontend:v1.0
    environment:
      <<: *frontend-env
      API_URL: http://satellite-backend-5:80
    ports:
      - "4371:4321"

  db-master:
    image: mysql:8.0
    networks:
      - backend-net
    secrets:
      - mysql_root_pass
      - wp_db_pass
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_pass
      MYSQL_DATABASE: wp_master
      MYSQL_USER: wp_user
      MYSQL_PASSWORD_FILE: /run/secrets/wp_db_pass
    volumes:
      - db-master-data:/var/lib/mysql

  db-sat1:
    image: mysql:8.0
    networks:
      - backend-net
    environment:
      MYSQL_ROOT_PASSWORD: root_pass
      MYSQL_DATABASE: wp_sat1
      MYSQL_USER: wp_user
      MYSQL_PASSWORD: wp_pass
    volumes:
      - db-sat1-data:/var/lib/mysql

  db-sat2:
    image: mysql:8.0
    networks:
      - backend-net
    environment:
      MYSQL_ROOT_PASSWORD: root_pass
      MYSQL_DATABASE: wp_sat2
      MYSQL_USER: wp_user
      MYSQL_PASSWORD: wp_pass
    volumes:
      - db-sat2-data:/var/lib/mysql

  db-sat3:
    image: mysql:8.0
    networks:
      - backend-net
    environment:
      MYSQL_ROOT_PASSWORD: root_pass
      MYSQL_DATABASE: wp_sat3
      MYSQL_USER: wp_user
      MYSQL_PASSWORD: wp_pass
    volumes:
      - db-sat3-data:/var/lib/mysql

  db-sat4:
    image: mysql:8.0
    networks:
      - backend-net
    environment:
      MYSQL_ROOT_PASSWORD: root_pass
      MYSQL_DATABASE: wp_sat4
      MYSQL_USER: wp_user
      MYSQL_PASSWORD: wp_pass
    volumes:
      - db-sat4-data:/var/lib/mysql

  db-sat5:
    image: mysql:8.0
    networks:
      - backend-net
    environment:
      MYSQL_ROOT_PASSWORD: root_pass
      MYSQL_DATABASE: wp_sat5
      MYSQL_USER: wp_user
      MYSQL_PASSWORD: wp_pass
    volumes:
      - db-sat5-data:/var/lib/mysql

volumes:
  master-wp-content:
  sat1-wp-content:
  sat2-wp-content:
  sat3-wp-content:
  sat4-wp-content:
  sat5-wp-content:
  db-master-data:
  db-sat1-data:
  db-sat2-data:
  db-sat3-data:
  db-sat4-data:
  db-sat5-data:

secrets:
  wp_cli_user:
    file: ./secrets/wp_cli_user.txt
  wp_cli_pass:
    file: ./secrets/wp_cli_pass.txt
  wp_db_pass:
    file: ./secrets/wp_db_pass.txt
  mysql_root_pass:
    file: ./secrets/mysql_root_pass.txt