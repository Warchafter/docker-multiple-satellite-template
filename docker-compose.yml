networks:
  backend-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.10.0.0/16
          gateway: 10.10.0.1
  frontend-net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.20.0.0/16
          gateway: 10.20.0.1

x-backend-env: &backend-env
  WORDPRESS_DB_PASSWORD_FILE: /run/secrets/wp_db_pass
  WORDPRESS_DB_USER: wp_user

x-frontend-env: &frontend-env {}

x-backend-template: &backend-defaults
  build:
    dockerfile: Dockerfile
  image: sat-backend:latest
  networks: [backend-net]
  volumes:
    - wp-content:/var/www/html/wp-content
  secrets:
    - mysql_root_pass
    - wp_db_pass
  healthcheck:
    test: ["CMD-SHELL","curl -f http://localhost:80/wp-json || exit 1"]
    interval: 30s
    timeout: 5s
    retries: 3
    start_period: 15s
  restart: unless-stopped

x-frontend-template: &frontend-defaults
  build:
    dockerfile: Dockerfile
  image: sat-frontend:latest
  networks: [frontend-net, backend-net]
  ports: ["4321:4321"]
  healthcheck:
    test: ["CMD-SHELL","curl -f http://localhost:4321/health || exit 1"]
    interval: 30s
    timeout: 5s
    retries: 3
    start_period: 15s
  restart: unless-stopped
  environment:
    API_URL: http://satellite-backend:80

services:
  # Master backend: Headless WP
  master-backend:
    build:
      context: ./services/backend-master
      dockerfile: Dockerfile
    image: "master-backend:${IMAGE_TAG}" # This should be changed later on fit ${GITHUB_SHA::7} >> .env
    networks:
      - backend-net
    volumes:
      - master-wp-content:/var/www/html/wp-content
    healthcheck:
      test: ["CMD-SHELL","curl -f http://localhost:80/wp-json || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    restart: unless-stopped
    secrets:
      - wp_cli_user
      - wp_cli_pass
      - wp_cli_email
    environment:
      WORDPRESS_DB_HOST: ${MYSQLHOST}
      WORDPRESS_DB_PORT: ${MYSQLPORT}
      WORDPRESS_DB_USER: ${MYSQLUSER}
      WORDPRESS_DB_PASSWORD: ${MYSQLPASSWORD}
      WORDPRESS_DB_NAME: ${MYSQLDATABASE}
      WP_DEPLOYER_EMAIL: ${WP_DEPLOYER_EMAIL}
      WP_DEPLOYER_PASS: ${WP_DEPLOYER_PASS}
    ports:
      - "9001:80"
  
  # Master frontend: Astro SSR
  master-frontend:
    build:
      context: ./services/frontend-master
      dockerfile: Dockerfile
    image: master-frontend:latest
    networks:
      - frontend-net
      - backend-net
    healthcheck:
      test: ["CMD-SHELL","curl -f http://localhost:4321/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    restart: unless-stopped
    secrets:
      - mysql_root_pass
    environment:
      API_URL: http://master-backend:80
      PUBLIC_WP_API: http://master-backend:80/wp-json/wp/v2
    ports:
      - "4321:4321"
    depends_on:
      - master-backend

volumes:
  master-wp-content:

secrets:
  wp_cli_user:
    file: ./secrets/wp_cli_user.txt
  wp_cli_pass:
    file: ./secrets/wp_cli_pass.txt
  wp_cli_email:
    file: ./secrets/wp_cli_email.txt
  wp_db_pass:
    file: ./secrets/wp_db_pass.txt
  mysql_root_pass:
    file: ./secrets/mysql_root_pass.txt